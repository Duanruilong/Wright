# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane



# 原来的
# default_platform(:ios)

# platform :ios do
#   desc "Description of what the lane does"
#   lane :custom_lane do
#     # add actions here: https://docs.fastlane.tools/actions
#   end

#   desc "development"
# 	lane :build_dev do |options|
# 		update_info_plist
# 		update_code_signing_settings
# 		increment_version_number
# 		build_app(
# 			scheme: "taroDemo",
# 			workspace: "taroDemo.xcworkspace",
# 			export_method: "development",
# 			configuration: "Debug",
# 			# clean: true,
# 			xcargs: "GCC_PREPROCESSOR_DEFINITIONS='$(inherited) DEBUG=1'",
# 			export_options: {
# 				method: "development",
# 				compileBitcode: false
# 			}
# 		)
# 	end

# 	desc "release"
# 	lane :build_release do |options|
# 		update_info_plist
# 		update_code_signing_settings
# 		increment_version_number
# 		increment_build_number
# 		build_app(
# 			scheme: "taroDemo",
# 			clean: true,
# 			workspace: "taroDemo.xcworkspace",
# 			export_method: "ad-hoc"
# 		)
# 		pgyer(api_key: "688a4a01a37af7955860db0b0f7539fd", user_key: "6d53a8bfa4d209932e74e11a2d1ce3b2")
# 	end
	
# end

# 原来的 end

# 定义打包平台
default_platform(:ios)

# 任务脚本
platform :ios do
  desc "Description of what the lane does"
  # 打包时候用的名称   例如 fastlane app
#   lane :app do 
  lane :build_release do 
    # add actions here: https://docs.fastlane.tools/actions
    gym(
		# 每次打包之前clean一下
		clean: true,    
		# 打包出 ipa 文件的路径，我放到了桌面文件夹，你自行更改文件夹
		output_directory: '/Users/hengqianjin/Desktop/APP', 
		# output_directory: './build',      
		# 打包的名称，可任意取 
		output_name: 'wright.ipa', 
		# 项目的 scheme，自己项目名   .xcworkspace 前面的项目名就是
		scheme: "taroDemo",      
		# 默认 Release，Release or Debug     
		# configuration: 'Debug', 
		# 是否包含 bitcode  
		include_bitcode: false,  
		# 是否包含 symbols 
		include_symbols: true, 
		# 打包导出方式，包含 app-store, validation, ad-hoc, package, enterprise, development, developer-id and mac-application   
		export_method: 'ad-hoc',  
		# 这个设置是为了设置 xcode 自动配置证书和配置文件，当然也可以手动配置，可以参考文档
		export_xcargs: '-allowProvisioningUpdates' 
    )
    # mac上的通知弹窗，通知打包完毕
    notification(app_icon: "./fastlane/icon.png", title: "manager", subtitle: "打包成功，已导出安装包", message: "准备发布到蒲公英中……")
    #配置上传蒲公英账号  蒲公英的 api_key和 user_key  用自己蒲公英账号的，别用我的！！！如果没有可删除
    pgyer(api_key: "688a4a01a37af7955860db0b0f7539fd", user_key: "6d53a8bfa4d209932e74e11a2d1ce3b2", update_description: "fastlane自动打包")
  end

  desc "development"
	lane :build_dev do |options|
		update_info_plist
		update_code_signing_settings
		increment_version_number
		build_app(
			scheme: "taroDemo",
			workspace: "taroDemo.xcworkspace",
			export_method: "development",
			configuration: "Debug",
			# clean: true,
			xcargs: "GCC_PREPROCESSOR_DEFINITIONS='$(inherited) DEBUG=1'",
			export_options: {
				method: "development",
				compileBitcode: false
			}
		)
	end

	desc "release"
	lane :build_release do |options|
		update_info_plist
		update_code_signing_settings
		increment_version_number
		increment_build_number
		build_app(
			scheme: "taroDemo",
			clean: true,
			workspace: "taroDemo.xcworkspace"
		)
	end
	
end

